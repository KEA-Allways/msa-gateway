server:
  port: 8082

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${server.port}}
    prefer-ip-address : true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${env.eureka-url}

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
      globalcors:
        cors-configurations:
          "[/**]":
            allowedOrigins: 'http://localhost:3000'
            allow-credentials: true
            allowedHeaders: '*'
            allowedMethods:
              - PUT
              - GET
              - POST
              - DELETE
              - OPTIONS
        add-to-simple-url-handler-mapping : true

      routes:
        - id: user-command-service-sign
#          uri: ${env.user-command-url}
          uri: lb://user-command-service
          predicates:
            - Path=/api/auth/**
            - Method=POST

        - id: user-command-service
#          uri: ${env.user-command-url}
          uri: lb://user-command-service
          predicates:
            - Path=/api/user/**, /api/blog/**
            - Method=POST,PUT,DELETE
          filters:
            - name: AccessTokenDecryptFilter

        - id: user-query-service
#          uri: ${env.user-query-url}
          uri: lb://user-query-service
          predicates:
            - Path=/api/user/**, /api/blog/**
            - Method=GET
          filters:
            - name: AccessTokenDecryptFilter

        - id: blog-command-service
#          uri:  ${env.blog-command-url}
          uri: lb://blog-command-service
          predicates:
            - Path=/api/post/** ,/api/theme/**, /api/template/** , /api/category/**
            - Method=POST,PUT,DELETE
          filters:
            - name: AccessTokenDecryptFilter

        - id: blog-query-service
#          uri: ${env.blog-query-url}
          uri: lb://blog-query-service
          predicates:
            - Path=/api/post/** ,/api/theme/**, /api/template/** , /api/category/**
            - Method=GET
          filters:
            - name: AccessTokenDecryptFilter

        - id: file-command-service
#          uri: ${env.file-command-url}
          uri: lb://file-command-service
          predicates:
            - Path=/api/feign/**, /api/file/**
            - Method=POST,PUT,DELETE


        - id: file-query-service
#          uri: ${env.file-query-url}
          uri: lb://file-query-service
          predicates:
            - Path=/api/feign/**
            - Method=GET
jwt:
  key:
    #스프링부트 마스터하고싶다
    access: 7Iqk7ZSE66eB67aA7Yq4IOuniOyKpO2EsO2VmOqzoOyLtuuLpA==
    #스프링부트 마스터하고싶다 진짜로
    refresh: 7Iqk7ZSE66eB67aA7Yq4IOuniOyKpO2EsO2VmOqzoOyLtuuLpCDsp4Tsp5zroZw=

  max-age:
    access: 604800 # 60 * 30
    refresh: 604800 # 60 * 60 * 24 * 7

env:
  front-url: http://localhost:3000
  eureka-url: http://localhost:8761/eureka
  user-command-url: http://localhost:8083
  user-query-url: http://localhost:8084
  blog-command-url: http://localhost:8085
  blog-query-url: http://localhost:8086
  file-command-url: http://localhost:8087
  file-query-url: http://localhost:8088

